services:
  portainer:
    profiles: [ "all", "portainer" ]
    image: portainer/portainer-ce:2.29.1
    container_name: devops-portainer-container
    hostname: devops-portainer-container
    restart: unless-stopped
    ports:
      - "${DEVOPS_PORTAINER_HOST_HTTP_PORT}:9000"
      - "${DEVOPS_PORTAINER_HOST_HTTPS_PORT}:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - network
  mysql:
    profiles: [ "all", "mysql" ]
    image: mysql:8.4.5
    container_name: devops-mysql-container
    hostname: devops-mysql-container
    restart: unless-stopped
    ports:
      - "${DEVOPS_MYSQL_HOST_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DEVOPS_MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DEVOPS_MYSQL_DATABASE}
      MYSQL_USER: ${DEVOPS_MYSQL_USER}
      MYSQL_PASSWORD: ${DEVOPS_MYSQL_PASSWORD}
    volumes:
      - ./configs/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
      - ./configs/mysql/initdb:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DEVOPS_MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - network
  redis:
    profiles: [ "all", "redis" ]
    image: redis:7.4.2
    container_name: devops-redis-container
    hostname: devops-redis-container
    restart: unless-stopped
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${DEVOPS_REDIS_PASSWORD}" ]
    ports:
      - "${DEVOPS_REDIS_HOST_PORT}:6379"
    volumes:
      - ./configs/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${DEVOPS_REDIS_PASSWORD}", "--raw", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - network
  nginx:
    profiles: [ "all", "nginx" ]
    image: nginx:1.26.3
    container_name: devops-nginx-container
    hostname: devops-nginx-container
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/templates:/etc/nginx/templates:ro
      - nginx-cache:/data/nginx-cache
      - nginx-log:/var/log/nginx
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 3s
    networks:
      - network
  rabbitmq:
    profiles: [ "all", "rabbitmq" ]
    image: rabbitmq:4.1.0-management
    container_name: devops-rabbitmq-container
    hostname: devops-rabbitmq-container
    restart: unless-stopped
    ports:
      - "${DEVOPS_RABBITMQ_HOST_AMQP_PORT}:5672"
      - "${DEVOPS_RABBITMQ_HOST_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${DEVOPS_RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${DEVOPS_RABBITMQ_DEFAULT_PASS}
    volumes:
      - ./configs/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./configs/rabbitmq/enabled-plugins:/etc/rabbitmq/enabled_plugins:ro
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-log:/var/log/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_port_connectivity && rabbitmq-diagnostics -q check_local_alarms" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - network
  minio:
    profiles: [ "all", "minio" ]
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: devops-minio-container
    hostname: devops-minio-container
    restart: unless-stopped
    command: server /data/disk{1...4} --console-address ":9001" -address ":9000"
    ports:
      - "${DEVOPS_MINIO_HOST_API_PORT}:9000"
      - "${DEVOPS_MINIO_HOST_CONSOLE_PORT}:9001"
    environment:
      MINIO_ROOT_USER: ${DEVOPS_MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${DEVOPS_MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - network

volumes:
  portainer-data:
    name: devops-portainer-data
  mysql-data:
    name: devops-mysql-data
  redis-data:
    name: devops-redis-data
  nginx-cache:
    name: devops-nginx-cache
  nginx-log:
    name: devops-nginx-log
  rabbitmq-data:
    name: devops-rabbitmq-data
  rabbitmq-log:
    name: devops-rabbitmq-log
  minio-data:
    name: devops-minio-data

networks:
  network:
    name: devops-network
    driver: bridge